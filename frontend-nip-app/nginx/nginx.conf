server {
    listen 80;
    server_name localhost;

    # Definisikan root path dan file index utama di level server
    root /usr/share/nginx/html;
    index index.html;

    # Blok ini menangani semua permintaan untuk frontend (SPA)
    location / {
        # Selalu kembali ke index.html agar routing di sisi klien (React) berfungsi
        try_files $uri $uri/ /index.html;
    }

    # Blok ini meneruskan semua permintaan yang dimulai dengan /api ke backend
    location /api {
        # Pastikan 'backend' adalah nama service backend Anda di docker-compose.yml
        proxy_pass http://backend:500;
        
        # Header penting untuk meneruskan informasi request asli ke backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


# server {
#     listen 80;
#     server_name localhost;

#     location / {
#         root /usr/share/nginx/html;
#         index index.html index.htm;
#         try_files $uri $uri/ /index.html;
#     }

#     location /api {
#         proxy_pass http://backend:5000; 
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         add_header 'Access-Control-Allow-Origin' '*' always;
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
#         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
#         add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
#     }

#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }
# }